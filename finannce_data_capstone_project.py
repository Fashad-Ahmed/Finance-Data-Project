# -*- coding: utf-8 -*-
"""FInannce Data Capstone Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cqAiMrH5oGuWizv8x3c0kMFGjXMOH7QR
"""

# Commented out IPython magic to ensure Python compatibility.
from pandas_datareader import data, wb
import pandas as pd
import numpy as np
import seaborn as sns
import datetime
# %matplotlib inline

# BAC = data.DataReader("BAC", 'google', start, end)

# taking help regarding Google Finance data handling from Docmentation

start = datetime.datetime(2006, 1, 1)
end = datetime.datetime(2016, 1, 1)

BAC = data.DataReader('BAC','yahoo',start,end)

BAC

#CitiGroup
C = data.DataReader("C", 'yahoo', start, end)

# Goldman Sachs
GS = data.DataReader("GS", 'yahoo', start, end)

#JPMorgan Chase
JPM = data.DataReader("JPM", 'yahoo', start, end)

# Morgan Stanley
MS = data.DataReader("MS", 'yahoo', start, end)

# Wells Fargo
WFC = data.DataReader("WFC", 'yahoo', start, end)

C

BAC

GS

JPM

MS

WFC

tickers = ['BAC', 'C', 'GS', 'JPM', 'MS', 'WFC']

bank_stocks = pd.concat([BAC, C, GS, JPM, MS, WFC], axis=1, keys=tickers)

bank_stocks.head(3)

bank_stocks.columns.names = ['Bank Ticker', 'Stock Info']

bank_stocks.head(3)

"""## EDA"""

#multi level Indexing && using .xs

bank_stocks['BAC']['Close'].max()

for price in tickers:
  print(price," ",bank_stocks['BAC']['Close'].max())

bank_stocks.xs(key='Close', axis=1, level='Stock Info').max()

returns = pd.DataFrame()

for price in tickers:
  returns[price + 'Return'] = bank_stocks[price]['Close'].pct_change()

returns.head()

sns.pairplot(returns[1:])

returns.idxmax()

returns.idxmin()

returns.std()

returns.std()

sns.distplot(returns.loc['2015-01-01':'2015-12-31']['MSReturn'], color='green', bins=50)

sns.distplot(returns.loc['2008-01-01':'2008-12-31']['CReturn'], color='purple', bins=50)

"""## Visualizations"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import seaborn as sns
sns.set_style('whitegrid')
# %matplotlib inline
import plotly
import cufflinks as cf
cf.go_offline()

for ticker in tickers:
  bank_stocks[ticker]['Close'].plot(label=ticker)
plt.legend()

bank_stocks.xs(key='Close', axis=1, level='Stock Info').plot()

bank_stocks.xs(key='Close', axis=1, level='Stock Info').iplot()

BAC['Close'].loc['2008-01-01':'2009-01-01'].rolling(window=30).mean().plot(label='30 Day Mov Avg')
BAC['Close'].loc['2008-01-01':'2009-01-01'].plot(label='BAC Close Orig.')
plt.legend()

bank_stocks.xs(key='Close', axis=1, level='Stock Info')

sns.heatmap(bank_stocks.xs(key='Close', axis=1, level='Stock Info').corr(), annot=True)

sns.clustermap(bank_stocks.xs(key='Close', axis=1, level='Stock Info').corr(), annot=True)

corr_co = bank_stocks.xs(key='Close', axis=1, level='Stock Info').corr()

corr_co

corr_co.iplot(kind='heatmap', colorscale='rdylbu')

bac15 = BAC[['Open','High','Low','Close']].loc['2005-01-01':'2016-01-01']
bac15.iplot(kind='candle')

MS['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='sma', periods=[13,21,55])

MS['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='boll')

